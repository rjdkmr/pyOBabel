# After changing this file, check it on:
#   http://lint.travis-ci.org/
language: python
sudo: false

python:
  - 2.7
  - 3.4
  - 3.5
  - 3.6
os:
  - linux
  - osx


matrix:
  exclude:
    - os: osx
      python: 2.7
    - os: osx
      python: 3.4
    - os: osx
      python: 3.5
    - os: osx
      python: 3.6
  include:
    - sudo: required
      python: 3.6
      services:
      - docker
      env: DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64
    - os: osx
      python: 2.7
      language: generic
      env: PYTHON=2.7
    - os: osx
      python: 3.4
      language: generic
      env: PYTHON=3.4
    - os: osx
      python: 3.5
      language: generic
      env: PYTHON=3.5
    - os: osx
      python: 3.6
      language: generic
      env: PYTHON=3.6
  allow_failures:
    - os: osx

env:
  global:
    # PYPIPASSWORD=...
    - secure: "eAreGa6ZBtzasZrZp32Hac3oxO+dmC2noOM+kcJA39yla4sQqdXCF0kot1VWuUXnbQ22khyGa68Rm59+pmlpExdNKikMWwm2j+DiRMJh/BimuwcXSG5Fw0rfSYmyL88QDdklBk0kzeXNdicjoKC8Ka+aiPraQ+OKhyyyKvj4Q6EMRvtd/YFg5R2xVucySHWxdvZX7ryJQIxUUN4me0mcGYZ61/W0ErGrpwk0+FcJA0TYZtyBD4CUvNdXgl0D+Wl0mAsh2bN0forMpr4U9pqoN8AUx4+1YNuQ9njh0fn/9zvQsTSPIwYsiEBbbtefKl+z3ucbTuvj1Kkgxo5ahdEyr5GBLc7gYyh9HMK4bqqSWg3bnkkpfpqM1pLvr3pZWiw1DLSRYKpahUQLwRnXtLaMVN+J4IJeg/1KkxOhbLUi6ahls0sXXLbxRMnWyaPFWiUsS4dU+diiec1csW0mwMSOeXgODaszY+3ZOLUtOdKoGU/CTYmrzYZRaMuB45XVECBMy8QExSP64HGvtVi3LtypK2J/B//fTkKc30WVICrrsBalY0DjgedrSzgAriVOAwsSzxtXYbCPHOrJ4lzJwU4ikAUPJyLCRJ+gb2GLgC+unNfj5etfJGPG95a+AEyFFepFHEJNtnOQTmy7MIGCCHkp+JTo+qe9b/yjCpGoBvO6f2Y="

before_install:
  - |
    if [[ $TRAVIS_OS_NAME != 'osx' ]]; then
      sudo apt-get update -qq
    else
      brew update
      brew cask uninstall oclint
      brew install gcc5
      brew outdated pyenv || brew upgrade pyenv
      eval "$(pyenv init -)"

      PYVER=${PYTHON}
      # Install the latest release of the specified Python version using pyenv.
      PYVER="$(pyenv install --list | grep -E "^\\s*$PYVER" | sort -n -t. -k3 | tail -n1)"
      pyenv install $PYVER
      pyenv global $PYVER
      echo "Selected Python $PYVER"
      python --version

      export CC=gcc
      export CXX=g++

    fi

install:
  - python -m pip install --upgrade pip
  - python -m pip install --upgrade wheel
  - python -m pip install pkgconfig
  - python -m pip install pybind11
  - |
    if [[ $TRAVIS_OS_NAME != 'osx' ]]; then
      python -m pip install auditwheel
      sudo apt-get install libeigen3-dev
    else
      brew install eigen
    fi
  - |
    if [[ -n "$DOCKER_IMAGE" ]]; then
      docker pull $DOCKER_IMAGE
    fi



before_script:
  - |
    if [[ -z ${DOCKER_IMAGE} ]]; then
      # At first instal openbabel
      mkdir external
      cd external
      git clone https://github.com/openbabel/openbabel
      cd openbabel
      mkdir build
      cd build
      cmake -DBUILD_SHARED=OFF -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DWITH_INCHI=ON -DWITH_STATIC_INCHI=ON ..
      make -j2
      sudo make install
      cd ..
      cd ..
      cd ..
    fi
  - |
    if [[ -z ${DOCKER_IMAGE} ]]; then
       python -m pip install -ve .
    fi
    

script:
  - |
    if [[ -z ${DOCKER_IMAGE} ]]; then
        python -c "import pyOBabel; print('=====\nTEST -- pyOBabel.openbabel version: ', pyOBabel.version_OB(), '\n=====')"
    else
       docker run --rm -v `pwd`:/io ${DOCKER_IMAGE} /io/build_in_docker.sh
    fi
  - |
    if [[ -n ${DOCKER_IMAGE} ]]; then
        ls wheelhouse/*
    fi


after_success:
  # Specify account details for PyPI
  - |
    echo "[distutils]"                                  > ~/.pypirc
    echo "index-servers ="                             >> ~/.pypirc
    echo "    pypi"                                    >> ~/.pypirc
    echo "[pypi]"                                      >> ~/.pypirc
    echo "    username:rjdkmr"                         >> ~/.pypirc
    echo "    password:$PYPIPASSWORD"                  >> ~/.pypirc
    echo "[server-login]"                              >> ~/.pypirc
    echo "    username:rjdkmr"                         >> ~/.pypirc
    echo "    password:$PYPIPASSWORD"                  >> ~/.pypirc
    
  - |
    pip install --upgrade twine
    export TWINE_USERNAME=rjdkmr
    export TWINE_PASSWORD=$PYPIPASSWORD
    if [[ $TRAVIS_OS_NAME != 'osx' ]]; then
      if [[ -n ${DOCKER_IMAGE} ]]; then
        twine upload --skip-existing wheelhouse/*
      fi
    else
     pip wheel -w wheelhouse/ --no-deps --no-cache-dir .
     twine upload --skip-existing wheelhouse/*
    fi

